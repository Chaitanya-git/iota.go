package integration_test

import (
	. "github.com/iotaledger/iota.go/api"
	. "github.com/iotaledger/iota.go/api/integration/samples"
	"github.com/iotaledger/iota.go/bundle"
	"github.com/iotaledger/iota.go/checksum"
	. "github.com/iotaledger/iota.go/consts"
	. "github.com/iotaledger/iota.go/trinary"
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"
	"strings"
)

var _ = Describe("PrepareTransfers()", func() {

	api, err := ComposeAPI(HttpClientSettings{}, nil)
	if err != nil {
		panic(err)
	}

	inputs := []Address{
		{
			Address:  "FJHSSHBZTAKQNDTIKJYCZBOZDGSZANCZSWCNWUOCZXFADNOQSYAHEJPXRLOVPNOQFQXXGEGVDGICLMOXX",
			KeyIndex: 0,
			Security: 2,
			Balance:  3,
		},
		{
			Address:  "9DZXPFSVCSSWXXQPFMWLGFKPBAFTHYMKMZCPFHBVHXPFNJEIJIEEPKXAUBKBNNLIKWHJIYQDFWQVELOCB",
			KeyIndex: 1,
			Security: 2,
			Balance:  4,
		},
	}

	a, err := checksum.AddChecksum(strings.Repeat("A", 81), true, AddressChecksumTrytesSize)
	if err != nil {
		panic(err)
	}
	b, err := checksum.AddChecksum(strings.Repeat("B", 81), true, AddressChecksumTrytesSize)
	if err != nil {
		panic(err)
	}

	transfers := bundle.Transfers{
		{
			Address: a,
			Value:   3,
			Tag:     "TAG",
			Message: "9",
		},
		{
			Address: b,
			Value:   3,
			Tag:     "TAG",
		},
	}

	zeroValueTransfer := bundle.Transfers{
		{
			Address: strings.Repeat("9", 81),
			Value:   0,
			Tag:     "TEST9TAG",
			Message: "TEST9MESSAGE",
		},
	}

	expectedZeroValueTrytes := []Trytes{
		
	}

	remainderAddress := SampleAddresses[2]

	_ = zeroValueTransfer
	_ = expectedZeroValueTrytes
	_ = remainderAddress

	Context("call", func() {
		It("resolves to correct account data", func() {
			trnfs, err := api.PrepareTransfers(Seed, transfers, PrepareTransfersOptions{Inputs: inputs,})
			Expect(err).ToNot(HaveOccurred())
			Expect(trnfs).To(Equal(ExpectedPrepareTransfersTrytes))
		})
	})

})
