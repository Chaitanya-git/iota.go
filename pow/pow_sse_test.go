// +build linux,amd64
package pow

import (
	"github.com/iotaledger/giota/curl"
	"github.com/iotaledger/giota/transaction"
	"github.com/iotaledger/giota/trinary"
	"testing"
	"time"
)

func testPowSSE(t *testing.T) float64 {
	var txTrinary trinary.Trytes

	s := time.Now()
	nonce, err := PowSSE(txTrinary, 14)
	ti := time.Now().Sub(s)
	if err != nil {
		t.Fatal(err)
	}

	txTrinary = txTrinary[:len(txTrinary)-transaction.NonceTrinarySize/3] + nonce
	h := curl.Hash(txTrinary)
	if h[len(h)-4:] != "9999" {
		t.Error("pow is illegal", h)
	}

	return float64(countSSE) / 1000 / ti.Seconds()
}

func TestPowSSE(t *testing.T) {
	_proc := PowProcs

	tests := []struct {
		name     string
		powProcs int
	}{
		{
			name:     "test plain PowSSE without setting PowProcs",
			powProcs: PowProcs,
		},
		{
			name:     "test with PowProcs = 1",
			powProcs: 1,
		},
		{
			name:     "test with PowProcs = 32",
			powProcs: 32,
		},
		{
			name:     "test with PowProcs = 64",
			powProcs: 64,
		},
	}

	for _, tt := range tests {
		PowProcs = tt.powProcs
		sp := testPowSSE(t)
		t.Logf("%s: %d kH/sec on SEE PoW", tt.name, int(sp))
	}

	PowProcs = _proc
}
