package giota

import "github.com/pkg/errors"

var (
	ErrInvalidTailTransactionHash          = errors.New("the given transaction hash is not a trail transaction hash (current index must be 0)")
	ErrTransactionNotFound                 = errors.New("couldn't find transaction via getTrytes")
	ErrTransactionNotFoundInInclusionState = errors.New("couldn't find transactions via getInclusionStates")
	ErrNotEnoughBalance                    = errors.New("not enough balance")
	ErrInvalidAddressStartEnd              = errors.New("start/end invalid, start must be less than end and end must be less than start+500")
	ErrEmptyTransferForPromote             = errors.New("given bundle for promotion is empty")
	ErrInconsistentSubtangle               = errors.New("inconsistent subtangle")
	ErrNonOKStatusCodeFromAPIRequest       = errors.New("endpoint returned a non OK status code")
	ErrUnknownErrorFromAPIRequest          = errors.New("an unknown error occurred while calling API")
	ErrInputsNotProvided                   = errors.New("inputs must me provided for controling transfer balances")
	ErrInputsInsufficientForBundle         = errors.New("the total balance of all inputs isn't enough for the bundle transfer")
)

// invalid inputs
var (
	ErrIllegalLength                = errors.New("illegal trits length")
	ErrIllegalTritConversionInput   = errors.New("illegal conversion input. Expected trits as uint8 slice")
	ErrIllegalTryteConversionInput  = errors.New("illegal conversion input. Expected trytes string or integer")
	ErrInsufficientBalance          = errors.New("insufficient balance")
	ErrInvalidAddress               = errors.New("invalid address")
	ErrInvalidRemainderAddress      = errors.New("invalid remainder address")
	ErrInvalidBranchTransaction     = errors.New("invalid branch transaction")
	ErrInvalidBundle                = errors.New("invalid bundle")
	ErrInvalidBundleHash            = errors.New("illegal bundle hash")
	ErrInvalidChecksum              = errors.New("illegal checksum")
	ErrInvalidCommand               = errors.New("illegal command format")
	ErrInvalidDepth                 = errors.New("illegal depth")
	ErrInvalidHash                  = errors.New("illegal hash")
	ErrInvalidIndex                 = errors.New("illegal index option")
	ErrInvalidTotalOption           = errors.New("illegal total option")
	ErrInvalidInput                 = errors.New("illegal input")
	ErrInvalidKey                   = errors.New("illegal key value")
	ErrInvalidMinWeightMagnitude    = errors.New("illegal min weight magnitude")
	ErrInvalidSearchKey             = errors.New("illegal search key")
	ErrInvalidSecurityLevel         = errors.New("illegal security option")
	ErrInvalidSecurityOption        = errors.New("illegal security option")
	ErrInvalidSeed                  = errors.New("illegal seed")
	ErrInvalidStartEndOptions       = errors.New("illegal end option")
	ErrInvalidStartOption           = errors.New("illegal start option")
	ErrInvalidTag                   = errors.New("illegal tag")
	ErrInvalidTransaction           = errors.New("illegal transaction")
	ErrInvalidTransactionTrytes     = errors.New("illegal transaction trytes")
	ErrInvalidAttachedTrytes        = errors.New("illegal attached trytes")
	ErrInvalidTransactionHash       = errors.New("illegal transaction hash")
	ErrInvalidTailTransaction       = errors.New("illegal tail transaction")
	ErrInvalidThreshold             = errors.New("illegal threshold option")
	ErrInvalidTransfer              = errors.New("illegal transfer object")
	ErrInvalidTrunkTransaction      = errors.New("illegal trunk transaction")
	ErrInvalidReferenceHash         = errors.New("illegal reference hash")
	ErrInvalidTrytes                = errors.New("illegal trytes")
	ErrInvalidURI                   = errors.New("illegal uri")
	ErrInvalidASCIIInput            = errors.New("conversion to trytes requires type of input to be encoded in ascii")
	ErrInvalidOddLength             = errors.New("conversion from trytes requires length of trytes to be even")
	ErrInvalidTryteEncodedJSON      = errors.New("invalid tryte encoded JSON message")
	ErrNotInt                       = errors.New("one of the inputs is not integer")
	ErrSendingBackToInputs          = errors.New("one of the transaction inputs is used as output")
	ErrInvalidTransactionsToApprove = errors.New("invalid transactions to approve")
	ErrNoInputs                     = errors.New("could not find any available inputs")
	ErrinvalidChecksum              = errors.New("invalid Checksum")
	ErrInconsistentTransaction      = errors.New("transaction is inconsistent")
)
